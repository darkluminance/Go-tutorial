// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: enum.sql

package database

import (
	"context"
)

const getEnumByName = `-- name: GetEnumByName :many
SELECT e.enumlabel AS enum_value
FROM pg_catalog.pg_type t
JOIN pg_catalog.pg_enum e ON t.oid = e.enumtypid
WHERE t.typname = $1
`

func (q *Queries) GetEnumByName(ctx context.Context, typname string) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getEnumByName, typname)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var enum_value string
		if err := rows.Scan(&enum_value); err != nil {
			return nil, err
		}
		items = append(items, enum_value)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
